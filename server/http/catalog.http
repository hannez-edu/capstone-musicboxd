### CATALOG API TESTS ###
@url = http://localhost:8080/api/catalog

### HAPPY PATH TESTS ###

### Get all catalog entries
GET {{url}} HTTP/1.1

### Get specific catalog entry
GET {{url}}/1 HTTP/1.1

### Get all entries for a user
GET {{url}}/users/1 HTTP/1.1

### Add new catalog entry - Want to Listen
POST {{url}} HTTP/1.1
Content-Type: application/json

{
  "userId": 1,
  "albumId": 6,
  "status": "WANT_TO_LISTEN"
}

### Add new catalog entry - Listened
POST {{url}} HTTP/1.1
Content-Type: application/json

{
  "userId": 1,
  "albumId": 10,
  "status": "LISTENED"
}

### Add new catalog entry - No Interest
POST {{url}} HTTP/1.1
Content-Type: application/json

{
  "userId": 2,
  "albumId": 3,
  "status": "NO_INTEREST"
}


### Update catalog entry status (Listened -> Want to Listen)
PUT {{url}}/10 HTTP/1.1
Content-Type: application/json

{
  "userId": 1,
  "albumId": 4,
  "status": "WANT_TO_LISTEN"
}


### Update catalog entry status (Listened -> No Interest)
PUT {{url}}/13 HTTP/1.1
Content-Type: application/json

{
  "userId": 1,
  "albumId": 11,
  "status": "NO_INTEREST"
}


### Delete catalog entry
DELETE {{url}}/1 HTTP/1.1


### UNHAPPY PATH TESTS ###

### Get non-existent catalog entry
GET {{url}}/999 HTTP/1.1

### Get catalog for non-existent user
GET {{url}}/users/999 HTTP/1.1

### Add catalog entry - Missing User ID
POST {{url}} HTTP/1.1
Content-Type: application/json

{
  "albumId": 5,
  "status": "WANT_TO_LISTEN"
}

### Add catalog entry - Missing Album ID
POST {{url}} HTTP/1.1
Content-Type: application/json

{
  "userId": 1,
  "status": "WANT_TO_LISTEN"
}

### Add catalog entry - Missing Status
POST {{url}} HTTP/1.1
Content-Type: application/json

{
  "userId": 1,
  "albumId": 5
}

### Add catalog entry - Invalid User ID
POST {{url}} HTTP/1.1
Content-Type: application/json

{
  "userId": 0,
  "albumId": 5,
  "status": "WANT_TO_LISTEN"
}

### Add catalog entry - Invalid Album ID
POST {{url}} HTTP/1.1
Content-Type: application/json

{
  "userId": 1,
  "albumId": -1,
  "status": "WANT_TO_LISTEN"
}

### Add duplicate catalog entry (same user + album)
POST {{url}} HTTP/1.1
Content-Type: application/json

{
  "userId": 1,
  "albumId": 4,
  "status": "LISTENED"
}

### Update non-existent catalog entry
PUT {{url}}/999 HTTP/1.1
Content-Type: application/json

{
  "userId": 1,
  "albumId": 5,
  "status": "LISTENED"
}

### Update with invalid User ID
PUT {{url}}/2 HTTP/1.1
Content-Type: application/json

{
  "userId": 0,
  "albumId": 5,
  "status": "LISTENED"
}


### Update with invalid Album ID
PUT {{url}}/2 HTTP/1.1
Content-Type: application/json

{
  "userId": 1,
  "albumId": 0,
  "status": "LISTENED"
}

### Update with missing Status
PUT {{url}}/2 HTTP/1.1
Content-Type: application/json

{
  "userId": 1,
  "albumId": 5
}

### Delete non-existent catalog entry
DELETE {{url}}/999 HTTP/1.1